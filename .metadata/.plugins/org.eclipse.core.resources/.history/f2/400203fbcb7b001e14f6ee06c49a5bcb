/**
 */
package component;

import base.BasePackage;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link component.ComponentPackage#getComponents <em>Components</em>}</li>
 *   <li>{@link component.ComponentPackage#getInterface <em>Interface</em>}</li>
 * </ul>
 *
 * @see component.ComponentPackage#getComponentPackage()
 * @model
 * @generated
 */
public interface ComponentPackage extends ComponentElement {
	/**
	 * Returns the value of the '<em><b>Components</b></em>' containment reference list.
	 * The list contents are of type {@link component.ComponentElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Components</em>' containment reference list.
	 * @see component.ComponentPackage#getComponentPackage_Components()
	 * @model containment="true"
	 * @generated
	 */
	EList<ComponentElement> getComponents();

	/**
	 * Returns the value of the '<em><b>Interface</b></em>' reference list.
	 * The list contents are of type {@link component.ComponentPackageInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Interface</em>' reference list.
	 * @see component.ComponentPackage#getComponentPackage_Interface()
	 * @model
	 * @generated
	 */
	EList<ComponentPackageInterface> getInterface();

} //ComponentPackage
