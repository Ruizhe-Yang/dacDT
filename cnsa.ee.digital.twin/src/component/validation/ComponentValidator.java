/**
 *
 * $Id$
 */
package component.validation;

import base.ArtifactElement;

import component.ComponentElement;
import component.ComponentType;
import component.FailureMode;
import component.Function;
import component.Input;
import component.LPort;
import component.Output;
import component.RPort;
import component.Reading;
import component.SafetyMechanism;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link component.Component}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ComponentValidator {
	boolean validate();

	boolean validateDynamic(boolean value);
	boolean validateIdentity(int value);
	boolean validateComponent_name(String value);
	boolean validateReuse(Boolean value);
	boolean validateCots(Boolean value);
	boolean validateFit(float value);
	boolean validateSafety_related(boolean value);
	boolean validateSil(int value);
	boolean validateReadings(EList<Reading> value);
	boolean validateBlockType(ArtifactElement value);
	boolean validateFunction(Function value);
	boolean validateComponentType(ComponentType value);
	boolean validateInputs(EList<Input> value);
	boolean validateOutputs(EList<Output> value);
	boolean validateLports(EList<LPort> value);
	boolean validateRports(EList<RPort> value);
	boolean validateSub_components(EList<ComponentElement> value);
	boolean validateFailure_modes(EList<FailureMode> value);
	boolean validateSafety_mechanisms(EList<SafetyMechanism> value);
	boolean validateRequirements(EList<ArtifactElement> value);
}
